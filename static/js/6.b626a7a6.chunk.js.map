{"version":3,"sources":["components/Product.js","components/Header.js","components/Dashboard.js","components/Basket.js","components/ContactUs.js","components/Copyright.js","components/AppStore.js","components/Main.js"],"names":["Product","props","product","onAdd","useHistory","useEffect","prodAdd","document","getElementById","addEventListener","window","alert","console","log","location","origin","className","src","image","alt","name","onClick","url","newWindow","open","price","click","prodDetails","id","Header","history","href","countCartItems","state","user","to","memo","Dashboard","products","useState","search","setSearch","searchedProd","setProduct","prodDisplay","length","map","type","onChange","e","target","value","prod","filter","toLowerCase","indexOf","searchProduct","placeholder","Basket","cartItems","onRemove","itemsPrice","reduce","a","c","qty","taxPrice","shippingPrice","totalPrice","useMemo","item","toFixed","confirm","push","ContactUs","info","Copyright","ReactDOM","createPortal","mobxStore","mobxTheme","mobxTitle","title","logDetails","makeObservable","this","observable","updateTitle","action","updateTheme","autorun","theme","connect","dispatch","setTheme","payload","observer","body","style","backgroundColor","fetch","headers","then","resp","json","data","setProducts","setCartItems","layoutEffect","setLayout","useLayoutEffect","contactInfo","useCallback","exist","find","htmlFor","defaultChecked","onRender","phase","actualDuration","baseDuration","startTime","commitTime","interactions"],"mappings":"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","file":"static/js/6.b626a7a6.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Product(props) {\n  const { product, onAdd } = props;\n  const history = useHistory();\n  \n  useEffect(() => {\n    let prodAdd = document.getElementById(\"prodAdd\");\n    prodAdd && prodAdd.addEventListener(\"click\", function(){\n      window.alert(\"Product has been added in the cart\");\n    }, false);\n\n  })\n  const prodDetails = (product, onAdd) => {\n    if (product) {\n      let url = window.location.origin === \"http://localhost:3000\" ? '/#/prodDetails' : 'https://akashsrivastava1993.github.io/shopping-cart/#/prodDetails';\n      let newWindow = window.open(url);\n      newWindow.image = product.image;\n      newWindow.name = product.name;\n      newWindow.price = product.price;\n      newWindow.click = product;\n      newWindow.onAdd = onAdd;\n    }\n  }\n  console.log(window.location.origin, \"JMS\");\n  return (\n    <div>\n      <img className=\"small\" src={window.image || product.image} alt={window.name || product.name} onClick={() => prodDetails(product, onAdd)} />\n      <h3>{window.name || product.name}</h3>\n      <div>â‚¹{window.price || product.price}</div>\n      <div>\n       {product ? <button onClick={() => onAdd(product || window.click)}>Add To Cart</button> :\n       <button id = \"prodAdd\" onClick={() => window.onAdd(window.click)}>Add To Cart</button>}\n      </div>\n    </div>\n  );\n}","import React, { memo } from 'react';\nimport { NavLink, useHistory } from 'react-router-dom';\n\nfunction Header(props) {\n  const history = useHistory();\n  console.log(\"From Header\", history);\n  return (\n    <header className=\"block row center\">\n      <div>\n        <a href=\"#/\">\n          <h1>Shopping Cart</h1>\n        </a>\n      </div>\n      <div>\n        <a href=\"#/cart\">\n          Cart{' '}\n          {props.countCartItems ? (\n            <button className=\"badge\">{props.countCartItems}</button>\n          ) : (\n            ''\n          )}\n        </a>\n        {history.location.state ? `Hello ${history.location.state.user}` : <NavLink to=\"/signIn\">Sign In</NavLink>}\n      </div>\n    </header>\n  );\n}\n\nexport default memo(Header);","import React from 'react';\nimport { useState } from 'react';\nimport Product from './Product';\n\nexport default function Dashboard(props) {\n  const { products, onAdd } = props;\n  const [search, setSearch] = useState(false);\n  const [searchedProd, setProduct] = useState([]);\n\n  const searchProduct = (e, products) => {\n    console.log(e.target.value, \"From Dahboard\") // product.name.toLowerCase() === e.target.value.toLowerCase() for exact search\n    let prod = products.filter(product => (product.name.toLowerCase().indexOf(e.target.value.toLowerCase()) !== -1));\n    if(prod.length) {\n      setSearch(false);\n      setProduct(prod);\n    } else {\n       setSearch(true);\n    }\n    if(e.target.value === \"\") {\n      setSearch(false);\n      setProduct(prod);\n    }\n  }\nlet prodDisplay = searchedProd.length ? searchedProd.map((product) => (\n  <Product key={product.id} product={product} onAdd={onAdd}></Product>\n)) : products.map((product) => (\n  <Product key={product.id} product={product} onAdd={onAdd}></Product>\n))\n\n  return (\n    <main className=\"block col-2\">\n      <h2>Products</h2>\n      <input type=\"text\" id=\"myInput\" onChange={(e) => searchProduct(e, props.products)} placeholder=\"Search for products...\"></input>\n      <div className=\"row\">\n       {search ? <div>No items found</div> : prodDisplay}\n      </div>\n    </main>\n  );\n}","import React, {useMemo} from 'react';\nimport { useHistory } from 'react-router-dom';\n\nexport default function Basket(props) {\n  const history = useHistory();\n  const { cartItems, onAdd, onRemove } = props;\n  const itemsPrice = cartItems.reduce((a, c) => a + c.qty * c.price, 0);\n  const taxPrice = itemsPrice * 0.14;\n  const shippingPrice = itemsPrice > 2000 ? 0 : 20;\n\n  // const totalPrice = () => {\n  //   console.log(\"I am getting called\");\n  //   return itemsPrice + taxPrice + shippingPrice;\n  // }\n  \n  // no re-rendering of the function will happen on action of other events.\n  const totalPrice = useMemo(() => {\n    console.log(\"useMEMO\");\n    return itemsPrice + taxPrice + shippingPrice\n  }, [itemsPrice,taxPrice,shippingPrice]);\n   const handleClick = () => {\n     let confirm = window.confirm(\"Are you sure you want to place the orders\");\n     if(confirm === true) {\n     history.push('/ordered');\n     }\n   }\n  return (\n    <aside className=\"block col-1\">\n      <h2>Cart Items</h2>\n      <div>\n        {cartItems.length === 0 && <div>Cart is empty</div>}\n        {cartItems.map((item) => (\n          <div key={item.id} className=\"row\">\n            <div className=\"col-2\">{item.name}</div>\n            <div className=\"col-2\">\n              <button onClick={() => onRemove(item)} className=\"remove\">\n                -\n              </button>{' '}\n              <button onClick={() => onAdd(item)} className=\"add\">\n                +\n              </button>\n            </div>\n\n            <div className=\"col-2 text-right\">\n              {item.qty} x â‚¹{item.price.toFixed(2)}\n            </div>\n          </div>\n        ))}\n\n        {cartItems.length !== 0 && (\n          <>\n            <hr></hr>\n            <div className=\"row\">\n              <div className=\"col-2\">Items Price</div>\n              <div className=\"col-1 text-right\">â‚¹{itemsPrice.toFixed(2)}</div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-2\">Tax Price</div>\n              <div className=\"col-1 text-right\">â‚¹{taxPrice.toFixed(2)}</div>\n            </div>\n            <div className=\"row\">\n              <div className=\"col-2\">Shipping Price</div>\n              <div className=\"col-1 text-right\">\n                â‚¹{shippingPrice.toFixed(2)}\n              </div>\n            </div>\n\n            <div className=\"row\">\n              <div className=\"col-2\">\n                <strong>Total Price</strong>\n              </div>\n              <div className=\"col-1 text-right\">\n                <strong>â‚¹{totalPrice.toFixed(2)}</strong>\n              </div>\n            </div>\n            <hr />\n            <div className=\"row\">\n                <button onClick={() => handleClick()}>Place Order</button>\n            </div>\n          </>\n        )}\n      </div>\n    </aside>\n  );\n}","import {memo} from 'react';\nfunction ContactUs(props) {\n    console.log(\"from ContactUs\");\n    return <footer>{props.info()}</footer>\n}\n\nexport default memo(ContactUs);","import ReactDOM from 'react-dom';\n\nexport default function Copyright() {\n    return(\n        ReactDOM.createPortal(\n        <footer>Copyright Â© 2021 Shoping Cart</footer>,\n        document.getElementById('portal-root'))\n    );\n}","import { action, makeObservable, observable, autorun } from \"mobx\";\n\nclass AppStore {\n\n    mobxTheme = \"blue\";\n    mobxTitle = document.title;\n\n    constructor() {\n        makeObservable(this, {\n            mobxTheme: observable,\n            mobxTitle: observable,\n            updateTitle: action,\n            updateTheme: action\n        });\n        autorun(this.logDetails);\n    }\n\n    updateTheme(theme) {\n        return this.mobxTheme = theme;\n    }\n\n    updateTitle(title) {\n        return this.mobxTitle =title;\n    }\n\n    logDetails = () => {\n        // console.log(\"Hello\");\n    }\n}\n\nexport const mobxStore = new AppStore();\n","import { connect } from 'react-redux';\nimport Header from './Header';\nimport Dashboard from './Dashboard';\nimport Basket from './Basket';\nimport { useState, useEffect, useLayoutEffect, useCallback, Profiler } from 'react';\nimport ContactUs from './ContactUs';\nimport Copyrigtht from './Copyright';\nimport Toggle from 'react-toggle';\nimport \"react-toggle/style.css\";\nimport { observer } from 'mobx-react-lite';\nimport { mobxStore } from './AppStore';\n// import {shoppingData} from '../Context';\n\nfunction Main(props) {\n\n  // Don't Remove these comments\n  // For getting data we used three approaches here:\n\n  // 1) directly importing and using it in useState like below:\n  // const { products } = data; //import data from stub and use\n  // const [products,setProducts] = useState(data.products); use if not using context API or useEffect to fetch data\n\n  // 2) Context API by using useContext like below:\n  // const {products}=useContext(shoppingData);\n\n  // 3) The way we used in real world projects by useEffect and then storing and setting the value like below:\n\n  // const [theme, setTheme] = useState(\"white\");\n  // JS fetch()\n  useEffect(() => {\n    document.title = mobxStore.mobxTitle;\n  }, [mobxStore.mobxTitle]);\n  useEffect(() => {\n    document.body.style.backgroundColor = props.theme;\n    fetch(\"products.json\",\n      {\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json'\n        }\n\n      }) //here the actual API will be targeted\n      .then(resp => {\n        return resp.json();\n      })\n      .then(data => {\n        setProducts(data.products);\n      })\n  }, [props.theme]);\n  const [cartItems, setCartItems] = useState([]);\n\n  //async/await syntax below:\n  // useEffect(() => getProducts(), []);\n  // const [cartItems, setCartItems] = useState([]);\n\n  // const getProducts = async () => {\n  //   let res = await fetch(\"products.json\");\n  //   let data = await res.json();\n  //   return setProducts(data.products);\n  // }\n\n  const [products, setProducts] = useState([]);\n  const [layoutEffect, setLayout] = useState(\"\");\n\n  useLayoutEffect(() => {\n    if (products.length === 0) {\n      setLayout(\"LOADING...\");\n    } else {\n      setLayout(\"\");\n    };\n  }, [products.length]);\n\n  // In this example, the <ContactUs /> child component is re-rendered because the info prop is passed a new callback with a new reference.\n\n  // Note that even though the ContactUs child component uses React.memo to optimize performance, it is still re-rendered.\n\n  // How can this be fixed to prevent <ContactUs /> from re-rendering needlessly? -> By useCallback\n  const contactInfo = \"Contact us on 9140271427\";\n  const info = useCallback(() => {\n    return contactInfo;\n  }, [contactInfo]);\n\n\n  const onAdd = (product) => {\n    const exist = cartItems.find((item) => item.id === product.id);\n    console.log(exist, \"Exist\");\n    if (exist) {\n      setCartItems(\n        cartItems.map((item) =>\n          item.id === product.id ? { ...exist, qty: exist.qty + 1 } : item\n        )\n      );\n    } else {\n      setCartItems([...cartItems, { ...product, qty: 1 }]);\n    }\n  };\n\n  const onRemove = (product) => {\n    const exist = cartItems.find((item) => item.id === product.id);\n    if (exist.qty === 1) {\n      setCartItems(cartItems.filter((item) => item.id !== product.id));\n    } else {\n      setCartItems(\n        cartItems.map((item) =>\n          item.id === product.id ? { ...exist, qty: exist.qty - 1 } : item\n        )\n      );\n    }\n  };\n\n  const basketProfile = (\n    id, // the \"id\" prop of the Profiler tree that has just committed\n    phase, // either \"mount\" (if the tree just mounted) or \"update\" (if it re-rendered)\n    actualDuration, // time spent rendering the committed update\n    baseDuration, // estimated time to render the entire subtree without memoization\n    startTime, // when React began rendering this update\n    commitTime, // when React committed this update\n    interactions // the Set of interactions belonging to this update\n  ) => {\n    console.log(id, phase, actualDuration, baseDuration, startTime, commitTime, interactions, \"basket profile\")\n  }\n  return (\n    <div>\n      {layoutEffect}\n      <Header countCartItems={cartItems.length}></Header>\n      <div className=\"toggle\"><label htmlFor='cheese-status'>Select Theme:</label>\n        <Toggle\n          id='theme-status'\n          defaultChecked={props.theme}\n          onChange={() => { props.theme === \"white\" ? props.setTheme(\"brown\") : props.setTheme(\"white\") }} />\n        <label htmlFor='cheese-status'>{`Title of the App: ${mobxStore.mobxTitle}`}</label>\n        <Toggle\n          id='state-status'\n          defaultChecked={true}\n          onChange={() => { mobxStore.mobxTitle === \"React Redux App\" ? mobxStore.updateTitle(\"React Mobx App\") : mobxStore.updateTitle(\"React Redux App\") }} />\n      </div>\n      <div className=\"row\">\n        <Dashboard products={products} onAdd={onAdd}></Dashboard>\n        <Profiler id=\"BasketComp\" onRender={basketProfile}><Basket\n          cartItems={cartItems}\n          onAdd={onAdd}\n          onRemove={onRemove}\n        ></Basket></Profiler>\n      </div>\n      <ContactUs info={info}></ContactUs>\n      <Copyrigtht />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    theme: state.theme\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    setTheme: (theme) => dispatch({ type: \"THEME CHANGED\", payload: theme })\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(observer(Main));\n"],"sourceRoot":""}