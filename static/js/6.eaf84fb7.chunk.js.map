{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/SignIn.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","SignIn","nameRef","useRef","history","useHistory","useReducer","state","action","console","log","payload","type","userName","password","pathname","user","current","focus","valid","Error","dispatch","htmlFor","ref","id","name","onChange","e","onClick"],"mappings":"qHAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,ECVT,SAASQ,EAAQC,EAAQC,GACvB,IAAIC,EAAOR,OAAOQ,KAAKF,GAEvB,GAAIN,OAAOS,sBAAuB,CAChC,IAAIC,EAAUV,OAAOS,sBAAsBH,GACvCC,IAAgBG,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOZ,OAAOa,yBAAyBP,EAAQM,GAAKV,eAEtDM,EAAKM,KAAKC,MAAMP,EAAME,GAGxB,OAAOF,EAGM,SAASQ,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNb,EAAQL,OAAOqB,IAAS,GAAMC,SAAQ,SAAUxB,GAC9C,EAAemB,EAAQnB,EAAKuB,EAAOvB,OAE5BE,OAAOuB,0BAChBvB,OAAOwB,iBAAiBP,EAAQjB,OAAOuB,0BAA0BF,IAEjEhB,EAAQL,OAAOqB,IAASC,SAAQ,SAAUxB,GACxCE,OAAOC,eAAegB,EAAQnB,EAAKE,OAAOa,yBAAyBQ,EAAQvB,OAKjF,OAAOmB,E,2JC/BM,SAASQ,IACpB,IAAMC,EAAUC,mBACVC,EAAUC,cAkChB,EAA0BC,sBAzBV,SAACC,EAAOC,GAEpB,OADAC,QAAQC,IAAIF,EAAOG,QAAS,kBACpBH,EAAOI,MACX,IAAK,aACD,OAAO,2BAAKL,GAAZ,IAAmBM,SAAUL,EAAOG,UACxC,IAAK,iBACD,OAAO,2BAAKJ,GAAZ,IAAmBO,SAAUN,EAAOG,UACxC,IAAK,QAED,OADAF,QAAQC,IAAIH,EAAO,SACfA,EAAMM,WAAaN,EAAMO,UACzBV,EAAQd,KAAK,CACTyB,SAAU,IACVR,MAAO,CAAES,KAAMT,EAAMM,YAIlB,eAAKN,KAEZL,EAAQe,QAAQC,QACT,2BAAKX,GAAZ,IAAmBY,OAAO,KAElC,QACI,MAAM,IAAIC,MAAM,uBA3BP,CACjBP,SAAU,GACVC,SAAU,GACVK,OAAO,IA2BX,mBAAOZ,EAAP,KAAcc,EAAd,KAiBA,OACI,gCACI,uBAAOC,QAAQ,QAAf,uBAAwC,uBACxC,uBAAOV,KAAK,OAAOW,IAAKrB,EAASsB,GAAG,QAAQC,KAAK,QAAQC,SAAU,SAACC,GAAD,OAAON,EAAS,CAAET,KAAM,aAAcD,QAASgB,EAAElC,OAAOlB,WAC3H,uBACA,uBAAO+C,QAAQ,WAAf,uBAA2C,uBAC3C,uBAAOV,KAAK,WAAWY,GAAG,WAAWC,KAAK,WAAWC,SAAU,SAACC,GAAD,OAAON,EAAS,CAAET,KAAM,iBAAkBD,QAASgB,EAAElC,OAAOlB,WAAkB,uBAC5IgC,EAAMY,MAAQ,GAAK,mCACpB,wBAAQS,QAAS,kBAAMP,EAAS,CAAET,KAAM,WAAxC","file":"static/js/6.eaf84fb7.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { useRef, useReducer } from 'react';\nimport { useHistory } from 'react-router-dom';\nexport default function SignIn() {\n    const nameRef = useRef();\n    const history = useHistory();\n    // const [userName, setUsername] = useState(false);\n    // const [password, setPassword] = useState(false);\n    // const [valid, validate] = useState(true);\n    const initialState = {\n        userName: \"\",\n        password: \"\",\n        valid: true\n    }\n    const reducer = (state, action) => {\n        console.log(action.payload, \"action.payload\");\n        switch (action.type) {\n            case 'INPUT NAME':\n                return { ...state, userName: action.payload }\n            case 'INPUT PASSWORD':\n                return { ...state, password: action.payload }\n            case 'CLICK':\n                console.log(state, \"STATE\");\n                if (state.userName === state.password) {\n                    history.push({\n                        pathname: '/',\n                        state: { user: state.userName }\n                    });\n                   // history.push('./', \"admin\");\n                    // <NavLink to='/'>Shopping Cart</NavLink>\n                    return { ...state }\n                } else {\n                    nameRef.current.focus();\n                    return { ...state, valid: false }\n                }\n            default:\n                throw new Error(\"what's going on?\");\n        }\n    }\n    const [state, dispatch] = useReducer(reducer, initialState);\n    // const onName = (e) => {\n    //     return e.target.value === \"admin\" ? setUsername(true) : userName;\n    // }\n    // const onPassword = (e) => {\n    //     return e.target.value === \"admin\" ? setPassword(true) : password;\n    // }\n    // const onsubmit = () => {\n    //     console.log(userName);\n    //     if (userName && password) {\n    //         history.push('./', \"admin\");\n    //     } else {\n    //         nameRef.current.focus();\n    //         validate(false);\n    //     }\n    // }\n\n    return (\n        <div>\n            <label htmlFor=\"fname\">Username:</label><br></br>\n            <input type=\"text\" ref={nameRef} id=\"fname\" name=\"fname\" onChange={(e) => dispatch({ type: 'INPUT NAME', payload: e.target.value })}></input>\n            <br></br>\n            <label htmlFor=\"password\">Password:</label><br></br>\n            <input type=\"password\" id=\"password\" name=\"password\" onChange={(e) => dispatch({ type: 'INPUT PASSWORD', payload: e.target.value })}></input><br></br>\n            {state.valid ? '' : 'Please enter correct credentials'}\n            <button onClick={() => dispatch({ type: 'CLICK' })}>Submit</button>\n        </div>\n    );\n}"],"sourceRoot":""}